version: '3'
networks:
  default:
    external:
      name: docker_default

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_db:/var/lib/prometheus
      - ./prometheus_db:/prometheus
      - ./prometheus_db:/etc/prometheus
      - ./alert.rules:/etc/prometheus/alert.rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    ports:
      - '9090:9090'

  node-exporter:
    image: prom/node-exporter
    ports:
      - '9100:9100'

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - '8082:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_SMTP_ENABLED
      - GF_SMTP_HOST
      - GF_SMTP_USER
      - GF_SMTP_PASSWORD
      - GF_SMTP_FROM_ADDRESS
      - GF_SMTP_FROM_NAME
      - GF_SMTP_STARTTLS_POLICY
    volumes:
      - ./grafana_db:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - '3100:3000'

  grok:
    image: cvvnx1/grok_exporter
    container_name: grok_exporter
    ports:
      - 9144:9144
    volumes:
      - /var/log/apache2/other_vhosts_access.log:/log/default.log
      - /var/log/apache2/access.log:/log/access.log
      - /var/log/apache2/error.log:/log/error.log
      - ./grok_exporter_config_path.yml:/grok/config.yml
    #restart: unless-stopped

  geoip:
    image: greegorey/geoip-exporter
    container_name: geoip_exporter
    ports:
      - 9300:9300

#  reports:
#    image: skedler/reports:latest
#    container_name: reports
#    privileged: true
#    cap_add:
#      - SYS_ADMIN
#    volumes:
#      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#      - reportdata:/var/lib/skedler
#      - ./reporting.yml:/opt/skedler/config/reporting.yml
#    ports:
#      - 3001:3001
